AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - Cert Provider with DNS validation
Transform: AWS::Serverless-2016-10-31

Parameters:
  AppkubeDepartment:
    Type: String
  AppkubeProduct:
    Type: String
  AppkubeEnvironment:
    Type: String
  AppkubeService:
    Type: String
Resources:
  CopyCustomResource:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt CopyFunction.Arn

  S3BucketLogs:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain
    Properties:
      BucketName : !Sub '${AppkubeDepartment}-${AppkubeProduct}-${AppkubeEnvironment}-${AppkubeService}-log'
            # /papu -The following function to convert lowercase did not work , so we need to make sure that
      #we supply the parameters in lower case
        # Value:
        #   'Fn::Transform':
        #       Name: 'String'
        #       Parameters:
        #         InputString: !Sub '${AppkubeDepartment}-${AppkubeProduct}-${AppkubeEnvironment}-${AppkubeService}-log'
        #         Operation: Lower
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Solution
          Value: ACFS3
        - Key: AppkubeDepartment
          Value: !Ref AppkubeDepartment
        - Key: AppkubeProduct
          Value: !Ref AppkubeProduct
        - Key: AppkubeEnvironment
          Value: !Ref AppkubeEnvironment
        - Key: AppkubeService
          Value: !Ref AppkubeService


  S3BucketRoot:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain
    Properties:
      BucketName : !Sub '${AppkubeDepartment}-${AppkubeProduct}-${AppkubeEnvironment}-${AppkubeService}-root'
      # /papu -The following function to convert lowercase did not work , so we need to make sure that
      #we supply the parameters in lower case
        # Value:
        #   'Fn::Transform':
        #       Name: 'String'
        #       Parameters:
        #         InputString: !Sub '${AppkubeDepartment}-${AppkubeProduct}-${AppkubeEnvironment}-${AppkubeService}-root'
        #         Operation: Lower
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref 'S3BucketLogs'
        LogFilePrefix: 'origin/'
      Tags:
        - Key: Solution
          Value: ACFS3
        - Key: AppkubeDepartment
          Value: !Ref AppkubeDepartment
        - Key: AppkubeProduct
          Value: !Ref AppkubeProduct
        - Key: AppkubeEnvironment
          Value: !Ref AppkubeEnvironment
        - Key: AppkubeService
          Value: !Ref AppkubeService

  CopyLayerVersion:
    Type: "AWS::Serverless::LayerVersion"
    Properties:
      ContentUri: ../witch.zip
      CompatibleRuntimes:
        - nodejs16.x

  CopyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: S3CopyPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:ListBucket
            - s3:PutObject
            - s3:PutObjectAcl
            Resource:
              - !Sub
                - arn:aws:s3:::${TargetBucket}/*
                - TargetBucket: !Ref S3BucketRoot
              - !Sub
                - arn:aws:s3:::${TargetBucket}
                - TargetBucket: !Ref S3BucketRoot

  CopyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../www
      PackageType: Zip
      Environment:
        Variables:
          BUCKET: !Ref S3BucketRoot
      Handler: witch.staticHandler
      Layers:
        - !Ref CopyLayerVersion
      Role: !GetAtt CopyRole.Arn
      Runtime: nodejs16.x
      Timeout: 300

Outputs:
  S3BucketRoot:
    Description: Website bucket
    Value: !Ref S3BucketRoot
  S3BucketRootName:
    Description: Website bucket name
    Value: !GetAtt S3BucketRoot.DomainName
  S3BucketRootArn:
    Description: Website bucket locator
    Value: !GetAtt S3BucketRoot.Arn
  S3BucketLogs:
    Description: Logging bucket
    Value: !Ref S3BucketLogs
  S3BucketLogsName:
    Description: Logging bucket Name
    Value: !GetAtt S3BucketLogs.DomainName
  CopyFunction:
    Description: S3 helper function
    Value: !GetAtt CopyFunction.Arn
